// <auto-generated />
using System;
using DotnetChat.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DotnetChat.Migrations
{
    [DbContext(typeof(ChatContext))]
    [Migration("20220819144557_InitData")]
    partial class InitData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.Property<int>("ChatsId")
                        .HasColumnType("int");

                    b.Property<int>("MembersId")
                        .HasColumnType("int");

                    b.HasKey("ChatsId", "MembersId");

                    b.HasIndex("MembersId");

                    b.ToTable("ChatUser");

                    b.HasData(
                        new
                        {
                            ChatsId = 1,
                            MembersId = 1
                        },
                        new
                        {
                            ChatsId = 1,
                            MembersId = 2
                        },
                        new
                        {
                            ChatsId = 1,
                            MembersId = 3
                        },
                        new
                        {
                            ChatsId = 2,
                            MembersId = 1
                        },
                        new
                        {
                            ChatsId = 2,
                            MembersId = 2
                        });
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Chat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Discriminator")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Chats");

                    b.HasDiscriminator<string>("Discriminator").HasValue("Chat");
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Message", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("AuthorId")
                        .HasColumnType("int");

                    b.Property<int>("ChatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Delete")
                        .HasColumnType("int");

                    b.Property<int?>("MessageReplyId")
                        .HasColumnType("int");

                    b.Property<string>("Text")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AuthorId");

                    b.HasIndex("ChatId");

                    b.HasIndex("MessageReplyId");

                    b.ToTable("Messages");
                });

            modelBuilder.Entity("DotnetChat.Data.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Login")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Login = "Marikuana",
                            Password = "123"
                        },
                        new
                        {
                            Id = 2,
                            Login = "Bob",
                            Password = "123"
                        },
                        new
                        {
                            Id = 3,
                            Login = "Tom",
                            Password = "123"
                        });
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Group", b =>
                {
                    b.HasBaseType("DotnetChat.Data.Models.Chat");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasDiscriminator().HasValue("Group");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Test Group"
                        });
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Private", b =>
                {
                    b.HasBaseType("DotnetChat.Data.Models.Chat");

                    b.HasDiscriminator().HasValue("Private");

                    b.HasData(
                        new
                        {
                            Id = 2
                        });
                });

            modelBuilder.Entity("ChatUser", b =>
                {
                    b.HasOne("DotnetChat.Data.Models.Chat", null)
                        .WithMany()
                        .HasForeignKey("ChatsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetChat.Data.Models.User", null)
                        .WithMany()
                        .HasForeignKey("MembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Message", b =>
                {
                    b.HasOne("DotnetChat.Data.Models.User", "Author")
                        .WithMany()
                        .HasForeignKey("AuthorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetChat.Data.Models.Chat", "Chat")
                        .WithMany("Messages")
                        .HasForeignKey("ChatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DotnetChat.Data.Models.Message", "MessageReply")
                        .WithMany()
                        .HasForeignKey("MessageReplyId");

                    b.Navigation("Author");

                    b.Navigation("Chat");

                    b.Navigation("MessageReply");
                });

            modelBuilder.Entity("DotnetChat.Data.Models.Chat", b =>
                {
                    b.Navigation("Messages");
                });
#pragma warning restore 612, 618
        }
    }
}
